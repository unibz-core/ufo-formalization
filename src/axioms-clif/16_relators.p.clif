(cl-text  ax_externallyDependsOn_a71
(not (exists (m x)
	(iff (externallyDependsOn m x)
		(and (existentiallyDependsOn m x) (forall (y)
			(if (inheresIn m y)
				(existentiallyIndependentOf x y))
			)
		))
	)
)
)
(cl-text  ax_dExternallyDependentMode_a72
(forall (m)
	(iff (externallyDependentMode m)
		(and (mode m) (exists (x)
			(externallyDependsOn m x))
		))
	)
)
(cl-text  ax_foundedByInvolvedThings_a73
(forall (m p)
	(iff (foundedBy m p)
		(and (or (externallyDependentMode m) (relator m)) (perdurant p)))
	)
)
(cl-text  ax_relationalModesHaveAFoundationEvent_a74
(forall (m)
	(if (or (externallyDependentMode m) (relator m))
		(exists (p)
			(foundedBy m p))
		)
	)
)
(cl-text  ax_uniqueFoundationEvents_a74
(forall (m p1 p2)
	(if (and (foundedBy m p1) (foundedBy m p2))
		(=p1 p2))
	)
)
(cl-text  ax_dQuaIndividualOf_a75
(forall (x y)
	(iff (quaIndividualOf x y)
		(forall (z)
			(iff (overlap z x)
				(and (externallyDependentMode z) (inheresIn z y) (forall (p)
					(if (foundedBy x p)
						(foundedBy z p))
					)
				))
			)
		)
	)
)
(cl-text  ax_dQuaIndividual_a76
(forall (x)
	(iff (quaIndividual x)
		(exists (y)
			(quaIndividualOf x y))
		)
	)
)
(cl-text  ax_thePartsOfARelatorShareTheFoundationOfTheWhole_a80
(forall (x y z)
	(if (and (relator x) (partOf z x))
		(forall (p)
			(if (foundedBy z p)
				(foundedBy x p))
			)
		)
	)
)
(cl-text  ax_dRelator_a81
(forall (r)
	(iff (relator r)
		(and (exists (x)
			(properPartOf x r))
		 (forall (y z)
			(if (and (properPartOf y r) (properPartOf z r))
				(and (quaIndividual y) (quaIndividual z) (existentiallyDependsOn y z) (existentiallyDependsOn z y) (forall (p)
					(iff (foundedBy y p)
						(foundedBy z p))
					)
				))
			)
		 (forall (y2 z2)
			(if (and (properPartOf y2 r) (quaIndividual z2) (existentiallyDependsOn y2 z2) (existentiallyDependsOn z2 y2) (forall (p2)
				(iff (foundedBy y2 p2)
					(foundedBy z2 p2))
				)
			)
				(properPartOf z2 r))
			)
		))
	)
)
(cl-text  ax_dMediates_a82
(forall (r e)
	(iff (mediates r e)
		(and (relator r) (endurant e) (exists (q)
			(and (quaIndividualOf q e) (partOf q r)))
		))
	)
)
